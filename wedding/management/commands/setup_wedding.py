from django.core.management.base import BaseCommand
from django.contrib.auth.models import User
from wedding.models import WeddingInfo, Guest, Table, ScheduleEvent, MenuItem
from datetime import date, time

class Command(BaseCommand):
    help = 'Setup wedding app with sample data'

    def handle(self, *args, **options):
        self.stdout.write('Setting up wedding application...')

        # Create wedding info
        wedding_info, created = WeddingInfo.objects.get_or_create(
            bride_name="Anna",
            groom_name="Marek",
            defaults={
                'wedding_date': date(2024, 6, 15),
                'venue_name': "PaÅ‚ac Romantyczny",
                'welcome_message': "Cieszymy siÄ™, Å¼e moÅ¼ecie byÄ‡ z nami w tym wyjÄ…tkowym dniu. Ta aplikacja pozwoli Wam dzieliÄ‡ siÄ™ wspomnieniami, przeglÄ…daÄ‡ zdjÄ™cia i byÄ‡ na bieÅ¼Ä…co z harmonogramem uroczystoÅ›ci."
            }
        )
        
        if created:
            self.stdout.write(f'âœ“ Created wedding info for {wedding_info}')
        else:
            self.stdout.write(f'âœ“ Wedding info already exists for {wedding_info}')

        # Create tables with realistic layout
        table_data = [
            (1, "Rodzina Panny MÅ‚odej", "NajbliÅ¼sza rodzina ze strony Anny", 10),
            (2, "Rodzina Pana MÅ‚odego", "NajbliÅ¼sza rodzina ze strony Marka", 10),
            (3, "Przyjaciele ze StudiÃ³w", "Znajomi z czasÃ³w uniwersyteckich", 8),
            (4, "Znajomi z Pracy", "WspÃ³Å‚pracownicy i koledzy zawodowi", 8),
            (5, "Przyjaciele z DzieciÅ„stwa", "DÅ‚ugoletni przyjaciele", 8),
            (6, "SÄ…siedzi i Znajomi", "Przyjaciele z okolicy", 8),
            (7, "DruÅ¼bowie i Druhny", "NajbliÅ¼si przyjaciele Pary MÅ‚odej", 10),
            (8, "MÅ‚odzieÅ¼", "MÅ‚odsza czÄ™Å›Ä‡ rodziny i znajomych", 10),
            (9, "Starsze Pokolenie", "Dziadkowie i starsi krewni", 8),
            (10, "StÃ³Å‚ Honorowy", "Para MÅ‚oda i Å›wiadkowie", 6),
        ]

        for number, name, description, capacity in table_data:
            table, created = Table.objects.get_or_create(
                number=number,
                defaults={
                    'name': name,
                    'description': description,
                    'capacity': capacity
                }
            )
            if created:
                self.stdout.write(f'âœ“ Created table {table}')

        # Create schedule events - zaktualizowany harmonogram
        events_data = [
            ("Przybywanie goÅ›ci, koktajl powitalny", "Powitanie goÅ›ci, koktajle i przystawki", time(15, 0), time(15, 30), "OgrÃ³d", 1),
            ("Ceremonia Å›lubna", "Åšlub cywilny w ogrodzie", time(15, 30), time(16, 30), "OgrÃ³d", 2),
            ("Sesja zdjÄ™ciowa i gratulacje", "ZdjÄ™cia z rodzinÄ… i przyjaciÃ³Å‚mi", time(16, 30), time(17, 45), "OgrÃ³d", 3),
            ("Zupa - Krem z pomidorÃ³w", "Podanie pierwszego dania", time(17, 45), time(18, 15), "Sala GÅ‚Ã³wna", 4),
            ("Drugie danie - Kotlet schabowy", "GÅ‚Ã³wny obiad weselny, filety z kurczaka dla dzieci", time(18, 15), time(19, 30), "Sala GÅ‚Ã³wna", 5),
            ("Pierwszy taniec Pary MÅ‚odej", "", time(19, 30), time(20, 0), "Parkiet", 6),
            ("RozpoczÄ™cie zabawy tanecznej", "", time(20, 0), time(21, 0), "Parkiet", 7),
            ("Strogonoff", "Hamburgerki dla dzieci", time(21, 0), time(21, 30), "Sala GÅ‚Ã³wna", 8),
            ("Tort weselny i Å¼yczenia", "Krojenie tortu weselnego", time(22, 0), time(22, 30), "Sala GÅ‚Ã³wna", 9),
            ("Kontynuacja zabawy", "", time(22, 30), time(23, 30), "Parkiet", 10),
            ("Bitki schabowe z kluskami Å›lÄ…skimi", "CiepÅ‚y posiÅ‚ek w Å›rodku nocy", time(23, 30), time(0, 30), "Sala GÅ‚Ã³wna", 11),
            ("Nocna zabawa", "", time(0, 30), time(1, 30), "Parkiet", 12),
            ("Barszczyk czerwony z pasztecikami", "Tradycyjny poranek weselny", time(1, 30), time(2, 30), "Sala GÅ‚Ã³wna", 13),
            ("ZakoÅ„czenie wesela", "", time(2, 30), time(3, 0), "Sala GÅ‚Ã³wna", 14),
        ]

        for title, description, start_time, end_time, location, order in events_data:
            event, created = ScheduleEvent.objects.get_or_create(
                title=title,
                defaults={
                    'description': description,
                    'start_time': start_time,
                    'end_time': end_time,
                    'location': location,
                    'order': order
                }
            )
            if created:
                self.stdout.write(f'âœ“ Created event: {event}')

        # Menu items based on wedding schedule
        menu_data = [
            #TODO: Dodac godzine
            # 17:45 - Zupa
            ("Krem z pomidorÃ³w z grzankÄ…", "Aromatyczny krem z dojrzaÅ‚ych pomidorÃ³w podawany z chrupiÄ…cÄ… grzankÄ…", "soup", None, "gluten, mleko", False, 1),
            
            # Drugie danie - Kotlet schabowy
            ("Kotlet schabowy z opiekanymi ziemniaczkami i surÃ³wkÄ…", "Tradycyjny kotlet schabowy z pieczonymi ziemniakami i mieszankÄ… surÃ³wek", "main", None, "gluten, jaja", False, 1),
            
            # Dla dzieci - Filety z kurczaka
            ("Filety z kurczaka z frytkami", "Delikatne filety z kurczaka z chrupiÄ…cymi frytkami - specjalnie dla dzieci", "main", None, "", False, 2),
            
            # 21:00 - Strogonoff
            ("Strogonoff", "Klasyczny strogonoff z woÅ‚owinÄ… w kremowym sosie z grzybami, podawany z ryÅ¼em", "main", None, "mleko", False, 3),
            
            # Dla dzieci - Hamburgerki
            ("Hamburgerki", "MaÅ‚e hamburgerki z miÄ™sem woÅ‚owym i frytkami - dla mÅ‚odszych goÅ›ci", "main", None, "gluten", False, 4),
            
            # 22:00 - Tort
            ("Tort weselny", "WyjÄ…tkowy tort weselny - gÅ‚Ã³wny deser uroczystoÅ›ci", "dessert", None, "gluten, mleko, jaja", False, 1),
            
            # 23:30 - Bitki schabowe
            ("Bitki schabowe w sosie pieczeniowym z kluskami Å›lÄ…skimi i surÃ³wkÄ…", "Soczyste bitki schabowe w aromatycznym sosie pieczeniowym z tradycyjnymi kluskami Å›lÄ…skimi", "main", None, "gluten", False, 5),
            
            # 1:30 - Barszczyk czerwony
            ("Barszczyk czerwony z pasztecikami i zapiekankami", "Tradycyjny barszczyk czerwony z domowymi pasztecikami i zapiekankami", "soup", None, "gluten", False, 2),
        ]

        for name, description, course, price, allergens, vegetarian, order in menu_data:
            item, created = MenuItem.objects.get_or_create(
                name=name,
                defaults={
                    'description': description,
                    'course': course,
                    'price': price,
                    'allergens': allergens,
                    'vegetarian': vegetarian,
                    'order': order
                }
            )
            if created:
                self.stdout.write(f'âœ“ Created menu item: {item}')

        self.stdout.write(
            self.style.SUCCESS(
                '\nðŸŽ‰ Wedding application setup completed!\n'
                'Utworzono 10 stolikÃ³w z Å‚Ä…cznÄ… liczbÄ… ~90 goÅ›ci\n'
                'Sample login credentials:\n'
                '  Username: jadwiga.kowalska, Password: wesele2024\n'
                '  Username: anna.nowak (Panna MÅ‚oda), Password: wesele2024\n'
                '  Username: marek.kowalski (Pan MÅ‚ody), Password: wesele2024\n'
                '  (i inni...)\n'
            )
        )